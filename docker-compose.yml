services:
  app:
    build:
      context: ./backend
    container_name: interact_backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend/src:/app/src
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/mydatabase
      REDIS_HOST: redis
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  background:
    build:
      context: ./background
    container_name: interact_background
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_started
    volumes:
      - ./background:/app
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/mydatabase
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload
    # command: tail -f /dev/null

  db:
    image: postgres:latest
    container_name: interact_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - interact_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d mydatabase" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: interact_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 3

volumes:
  interact_data:
